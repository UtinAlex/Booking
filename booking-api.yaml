openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: Booking
    url: http://localhost/api/

info:
  description: Документация разработки методов для сервиса бронирования
  version: "1.0.0"
  title: Booking API
  contact:
    name: Utin Aleksandr
    url: http://localhost
    email: dev@dev.net
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

tags:
  - name: Ресурсы
    description: API для работы с ресурсами бронирования

paths:
  /resources:
    post:
      tags:
        - Ресурсы
      summary: Добавление ресурса
      description: Добавление ресурса
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Название ресурса
                type:
                  type: string
                  description: Тип ресурса
                description:
                  type: string
                  description: Описаие ресурса
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resources'
        '422':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Validation'
  
  /resources/:
    get:
      tags:
        - Ресурсы
      summary: Получение списка ресурсов
      description: Получение списка ресурсов
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndexResources'
        '422':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Validation'
  
  /bookings:
    post:
      tags:
        - Бронирование
      summary: Создать бронирование
      description: Этот метод позволяет создать новое бронирование ресурсов.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  example: 1
                resourcesId:
                  type: integer
                  example: 7
                startTime:
                  type: string
                  format: date-time
                  example: '2025-04-04T17:30:00+03:00'
                endTime:
                  type: string
                  format: date-time
                  example: '2025-04-04T18:00:00+03:00'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
        '422':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Validation'

  /bookings/{bookingId}:
    delete:
      tags:
        - Бронирование
      summary: Удалить бронирование
      description: Этот метод позволяет удалить бронирование ресурсов.
      parameters:
        - in: path
          name: bookingId
          required: true
          schema:
            type: integer
          description: Id устройства
      responses:
        '204':
          description: noContent
        '422':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Validation'

components:
  schemas:
    Resources:
      type: object
      properties:
        id:
          nullable: false
          type: integer
          description: ID ресурса
          example: 5
        name:
          type: string
          nullable: false
          description: 'Название ресурса'
          example: 'BMW'
        type:
          type: string
          nullable: false
          description: 'Тип ресурса'
          example: 'Автомобиль'
        description:
          type: string
          nullable: false
          description: 'Описание ресурса'
          example: 'BMW X7'
        created_at:
          type: string
          nullable: false
          description: 'Дата добавления ресурса'
          example: '2025-03-23 18:59:12'
        updated_at:
          type: string
          nullable: false
          description: 'Дата добавления ресурса'
          example: '2025-03-23 18:59:12'
    Validation:
      type: object
      properties:
        type:
          type: array
          items:
            type: string
            nullable: false
            description: Отображается поле и ошибка в запросе
            example: The type field must be a string."
    IndexResources:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Resources'
    Booking:
      type: object
      properties:
        id:
          type: integer
          example: 2
        user_id:
          type: integer
          example: 1
        resources_id:
          type: integer
          example: 7
        start_time:
          type: string
          format: date-time
          example: '2025-04-04T17:30:00+03:00'
        end_time:
          type: string
          format: date-time
          example: '2025-04-04T18:00:00+03:00'
        created_at:
          type: string
          format: date-time
          example: '2025-04-04T14:02:05.000000Z'
        updated_at:
          type: string
          format: date-time
          example: '2025-04-04T14:02:05.000000Z'